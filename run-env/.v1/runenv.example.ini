[Config]
; menampilkan konfigurasi dan environment sebelum menjalankan aplikasi
; - true : untuk menampilkan konfigurasi
; - false: untuk tidak menampilkan konfigurasi
print_config = false

; program ini sudah secara otomatis membaca file yaml dari kubernetes
; dan mengambil env di dalam file YAML tersebut. jika anda ingin
; setiap kali aplikasi dijalankan selalu menggunakan yaml yang
; uptodate, maka anda bisa mengubah always_import_yaml menjadi true
; - true : mengimpor file YAML setiap kali aplikasi dijalankan
; - false: hanya sekali mengimpor file YAML lalu simpan di folder temp
always_import_yaml = false

; jika ada env yang tidak ingin diimport ke dalam aplikasi, anda bisa
; menambahkannya ke sini
; contoh:
; ignore_envs = LOGGER_HOST, LOGGER_PORT, LOGGER_OUTPUT
ignore_envs = LOGGER_OUTPUT

; kebalikan dari ignore_envs, jika ada env yang ingin diimport ke
; dalam aplikasi, anda bisa menambahkannya kedalam sini.
; example:
; allow_envs = JWT_SECRET,JWT_DURATION,DB_DSN,DB_HOST,DB_PORT,DB_NAME,DB_USER,DB_PASSWORD,DB_SSLMODE,DB_TIMEZONE,DB_MAX_RETRY,DB_TIMEOUT
allow_envs = 

; jika ada env yang tidak ingin diimport ke dalam dalam bentuk regex
ignore_envs_regex = "addons-\S+:9090"

; jika ada env yang ingin diimport ke dalam dalam bentuk regex
allow_envs_regex = ""

; jika ada env yang ingin diimport ke dalam aplikasi, anda bisa
; menambahkannya ke sini. ini bersifat umum. contoh:
; DB_HOST = postgre
[Custom]

; sama seperti [Custom], tetapi khusus environment dev.
[Custom.dev]

; sama seperti [Custom], tetapi khusus environment prestage.
[Costom.prestage]

; sama seperti [Custom], tetapi khusus environment stage.
[Costom.stage]

; sama seperti [Custom], tetapi khusus environment prerelease.
[Costom.prerelease]

; sama seperti [Custom], tetapi khusus environment release.
[Costom.release]